openapi: 3.0.0
info:
  title: API
  description: "Interface for communicating with the Health-Monitor service. Its functionalities\
    \ can be organized in the following set of operations:\n   - Operations for service\
    \ management:  permits to add and remove docker hosts to the system and to uninstall\
    \ it\n   - Operations for container management: permits to see the managed containers,\
    \ their status and to change the container manager configuration\n   - Operations\
    \ for testing purpose: permits to test the service with configurable attacks to\
    \ the containers"
  contact:
    name: Lost(In The Cloud)
  version: 1.0.0
servers:
- url: http://172.16.3.167:8080/healthmonitor
  description: Unipi Virtual Machine offered by the course. A VPN connection to the
    unipi cloud is required
paths:
  /containers:
    get:
      summary: Gives all the managed containers by the service
      description: It doesn't require any parameter and gives back a set of lists
        each one describing the containers inside a particular managed docker host.
        The response will contain for each docker host its status and a list of all
        the containers with information about their status and the current packet
        loss measured
      operationId: get_all_containers
      parameters: []
      responses:
        "200":
          description: Correct response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllContainersResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
    post:
      summary: 'Change the threshold configured into each manager. '
      description: Change the threshold configured into the docker managers. Each
        manager have a personal threshold used to identify if the packet loss percentage
        is too high and the container needs to be restarted.
      operationId: change_all_thresholds
      parameters: []
      requestBody:
        description: The request requires the threshold value to be set into the managers.
          The value is a percentage so it needs to be between 0 and 100 to be accepted.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/containers_body'
        required: true
      responses:
        "200":
          description: Correct Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectMultiResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /containers/{address}:
    get:
      summary: Get the status of the selected docker host and a list of all the managed
        containers with their status and the current packet loss percentage measured
      description: It doesn't require any parameter and gives back a set of lists
        each one describing the containers inside a particular managed docker host.
        The response will contain for each docker host its status and a list of all
        the containers with information about their status and the current packet
        loss measured
      operationId: get_manager_containers
      parameters:
      - name: address
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: The IPv4 address of the selected machine
          example: 172.16.3.167
      responses:
        "200":
          description: Correct Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
    put:
      summary: Add a new docker host into the service
      description: Install a new manager into the the selected machine. The operations
        requires the root password of the destination machine and that a ssh connection
        is present on the default port 23
      operationId: add_docker_manager
      parameters:
      - name: address
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: The IPv4 address of the selected machine
          example: 172.16.3.167
      requestBody:
        description: The operation requires the password of the root user of the destination
          machine
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/containers_address_body'
        required: true
      responses:
        "200":
          description: Correct Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
    post:
      summary: 'Change the threshold configured into the selected manager. '
      description: Change the threshold configured into the selected docker manager.
        Each manager have a personal threshold used to identify if the packet loss
        percentage is too high and the container needs to be restarted.
      operationId: change_manager_threshold
      parameters:
      - name: address
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: The IPv4 address of the destination machine
          example: 172.16.3.167
      requestBody:
        description: The operation requires a threshold parameters to be set into
          the machine. The threshold must be between 0 and 100
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/containers_address_body_1'
        required: true
      responses:
        "200":
          description: Correct Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
    delete:
      summary: Remove a registered docker host into the service
      description: Uninstall the selected manager from the machine. The system has
        already stored the password but its required in order to secure the operation
        and prevent that users will disable the managers
      operationId: remove_docker_manager
      parameters:
      - name: address
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: The IPv4 address of the selected machine
          example: 172.16.3.167
      responses:
        "200":
          description: Correct Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
    x-temp:
      summary: Remove a registered docker host into the service
      description: Uninstall the selected manager from the machine. The system has
        already stored the password but its required in order to secure the operation
        and prevent that users will disable the managers
      parameters:
      - name: address
        in: path
        required: true
        schema:
          type: string
        description: The IPv4 address of the selected machine
        minLength: ""
      operationId: remove_docker_manager
      responses:
        "200":
          description: Correct Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: root
        description: The operation requires the password of the root user on the remote
          machine. It also requires that on the remote machine an ssh connection is
          present on the default port 23
  /containers/{address}/{containerID}:
    get:
      summary: Gives information about the selected container
      description: The request returns the status and the packet loss of the selected
        container
      operationId: get_container_info
      parameters:
      - name: address
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: The IPv4 address of the selected manager
          example: 172.16.3.167
      - name: containerID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: The short id of the selected container. Short ids could be
            seen from the request of containers information
          example: asd12pomfa1g
      responses:
        "200":
          description: Correct response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
    put:
      summary: Add a container to the service
      description: Add a previously ignored container to the service. By default all
        the containers are added to the service
      operationId: add_container
      parameters:
      - name: address
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: The IPv4 address of the selected manager
          example: 172.16.3.167
      - name: containerID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: The short id of the selected container. Short ids could be
            seen from the request of containers information
          example: asd12pomfa1g
      responses:
        "200":
          description: Correct response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
    delete:
      summary: Remove a container from the service
      description: Ignore a container from the service management. By default all
        the containers are added to the service
      operationId: ignore_container
      parameters:
      - name: address
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: The IPv4 address of the selected manager
          example: 172.16.3.167
      - name: containerID
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: The short id of the selected container. Short ids could be
            seen from the request of containers information
          example: asd12pomfa1g
      responses:
        "200":
          description: Correct response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /test:
    put:
      summary: Starts all the antagonists
      description: Into each docker manager is linked an antagonist able to attack
        all the container into the local docker host. Starting the antagonist will
        perform an attack on all the containers with the last configuration provided.
        If no configuration has been provided than a default configuration will be
        used.
      operationId: start_all_antagonists
      parameters: []
      responses:
        "200":
          description: Correct Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectMultiResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
    post:
      summary: Change all the antagonists configuration
      description: "Change the configuration of all the antagonist. The configuration\
        \ consists of five different parameters:\n- heavy: defines the probability\
        \ that the attacker will choose to attack a container\n- balance: defines\
        \ the probability that the attackers will perform a packet loss attack or\
        \ a shutdown attack\n- loss: defines the mean packet loss value introduced\
        \ during an attack(the value will be the mean of normal distribution)\n- duration:\
        \ defines the duration of a packet loss attack to a container. The value will\
        \ be the lambda of an exponential distribution\n- frequency: defines the interleaving\
        \ time of each attacker between the possibility to perform an attack  "
      operationId: change_all_antagonists_conf
      requestBody:
        description: "The request body can contain this fields: \n- heavy: defines\
          \ the probability that the attacker will choose to attack a container. It's\
          \ a value between 0 and 100\n- balance: defines the probability that the\
          \ attackers will perform a packet loss attack or a shutdown attack. It's\
          \ a value between 0 and 100, the more the value tends to 100 the more the\
          \ probability is to perform a shutdown attack\n- loss: defines the mean\
          \ packet loss value introduced during an attack(the value will be the mean\
          \ of normal distribution). It's a value between 0 and 100\n- duration: defines\
          \ the duration of a packet loss attack to a container. The value will be\
          \ the lambda of an exponential distribution. The value is expressed in seconds\n\
          - frequency: defines the interleaving time of each attacker between the\
          \ possibility to perform an attack . The value is expressed in seconds\n\
          \nIf a field is missing simply it will not be changed, but no errors will\
          \ be raised"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/test_body'
        required: true
      responses:
        "200":
          description: Correct response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectMultiResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
    delete:
      summary: Stop all the antagonists
      description: The function will stop all the attackers into all the docker host.
        A started attack needs to be stop otherwise it will continue forever.
      operationId: stop_all_antagonist
      parameters: []
      responses:
        "200":
          description: Correct Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /test/{address}:
    put:
      summary: Start an antagonist
      description: Into each docker manager is linked an antagonist able to attack
        all the container into the local docker host. Starting the antagonist will
        perform an attack on all the containers with the last configuration provided.
        If no configuration has been provided than a default configuration will be
        used.
      operationId: start_antagonist
      parameters:
      - name: address
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: The IPv4 address of the destination
          example: 172.16.3.167
      responses:
        "200":
          description: Correct Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
    post:
      summary: Change an antagonist configuration
      description: "Change the configuration of the selected antagonist. The configuration\
        \ consists of five different parameters:\n- heavy: defines the probability\
        \ that the attacker will choose to attack a container\n- balance: defines\
        \ the probability that the attackers will perform a packet loss attack or\
        \ a shutdown attack\n- loss: defines the mean packet loss value introduced\
        \ during an attack(the value will be the mean of normal distribution)\n- duration:\
        \ defines the duration of a packet loss attack to a container. The value will\
        \ be the lambda of an exponential distribution\n- frequency: defines the interleaving\
        \ time of each attacker between the possibility to perform an attack  "
      operationId: change_antagonist_conf
      parameters:
      - name: address
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: The IPv4 address of the destination
          example: 172.16.3.167
      requestBody:
        description: "The request body can contain this fields: \n- heavy: defines\
          \ the probability that the attacker will choose to attack a container. It's\
          \ a value between 0 and 100\n- balance: defines the probability that the\
          \ attackers will perform a packet loss attack or a shutdown attack. It's\
          \ a value between 0 and 100, the more the value tends to 100 the more the\
          \ probability is to perform a shutdown attack\n- loss: defines the mean\
          \ packet loss value introduced during an attack(the value will be the mean\
          \ of normal distribution). It's a value between 0 and 100\n- duration: defines\
          \ the duration of a packet loss attack to a container. The value will be\
          \ the lambda of an exponential distribution. The value is expressed in seconds\n\
          - frequency: defines the interleaving time of each attacker between the\
          \ possibility to perform an attack . The value is expressed in seconds\n\
          \nIf a field is missing simply it will not be changed, but no errors will\
          \ be raised"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/test_address_body'
        required: true
      responses:
        "200":
          description: Correct response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
    delete:
      summary: Stop an antagonist
      description: The function will stop the selected antagonist to attack the local
        docker host. A started attack needs to be stop otherwise it will continue
        forever.
      operationId: stop_antagonist
      parameters:
      - name: address
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
          description: The IPv4 address of the destination
          example: 172.16.3.167
      responses:
        "200":
          description: Correct Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorrectResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
components:
  schemas:
    CorrectResponse:
      properties:
        command:
          type: string
          description: "type of results: ok or error"
          example: ok
        content:
          type: object
          description: Brief description of the operation result
          example: Request correctly executed
      example:
        command: ok
        content: Request correctly executed
    CorrectMultiResponse:
      properties:
        command:
          type: string
          description: "type of results: ok or error"
          example: ok
        content:
          type: array
          items:
            type: object
      example:
        command: ok
        content:
        - {}
        - {}
    BadResponse:
      properties:
        command:
          type: string
          description: "type of results: ok or error"
          example: ok
        type:
          type: string
          description: short description of the error
          example: INVALID_REQUEST
        description:
          type: string
          description: Brief description of the operation result
          example: Request correctly executed
    AllContainersResponse:
      properties:
        command:
          type: string
          description: "type of results: ok or error"
          example: ok
        description:
          type: array
          items:
            $ref: '#/components/schemas/AllContainersResponse_description'
      example:
        description:
        - address: 172.16.3.167
          content: {}
        - address: 172.16.3.167
          content: {}
        command: ok
    ContainerResponse:
      properties:
        command:
          type: string
          description: "type of results: ok or error"
          example: ok
        description:
          $ref: '#/components/schemas/AllContainersResponse_description'
      example:
        description:
          address: 172.16.3.167
          content: {}
        command: ok
    containers_body:
      type: object
      properties:
        threshold:
          type: number
          example: 60
    containers_address_body:
      type: object
      properties:
        password:
          type: string
          example: root
    containers_address_body_1:
      type: object
      properties:
        threshold:
          type: integer
          example: 70
    test_body:
      type: object
      properties:
        heavy:
          type: integer
          description: Probability between 0 and 100 that an attacker perform an attack
          example: 25
        balance:
          type: integer
          description: Probability between 0 and 100 that an attacker perform a shutdown
            attack
          example: 50
        loss:
          type: integer
          description: Percentage of packet loss
          example: 70
        duration:
          type: integer
          description: Seconds of packet loss attack duration
          example: 5
        frequency:
          type: integer
          description: Seconds between two consecutives attack to the same container
          example: 3
    test_address_body:
      type: object
      properties:
        heavy:
          type: integer
          description: Probability between 0 and 100 that an attacker perform an attack
          example: 25
        balance:
          type: integer
          description: Probability between 0 and 100 that an attacker perform a shutdown
            attack
          example: 50
        loss:
          type: integer
          description: Percentage of packet loss
          example: 70
        duration:
          type: integer
          description: Seconds of packet loss attack duration
          example: 5
        frequency:
          type: integer
          description: Seconds between two consecutives attack to the same container
          example: 3
    AllContainersResponse_description:
      type: object
      properties:
        address:
          type: string
          description: the IPv4 address of the selected docker host
          example: 172.16.3.167
        content:
          type: object
      example:
        address: 172.16.3.167
        content: {}

