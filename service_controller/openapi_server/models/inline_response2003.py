# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class InlineResponse2003(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, updates=None, availability=None, time=None):  # noqa: E501
        """InlineResponse2003 - a model defined in OpenAPI

        :param updates: The updates of this InlineResponse2003.  # noqa: E501
        :type updates: float
        :param availability: The availability of this InlineResponse2003.  # noqa: E501
        :type availability: float
        :param time: The time of this InlineResponse2003.  # noqa: E501
        :type time: str
        """
        self.openapi_types = {
            'updates': float,
            'availability': float,
            'time': str
        }

        self.attribute_map = {
            'updates': 'updates',
            'availability': 'availability',
            'time': 'time'
        }

        self._updates = updates
        self._availability = availability
        self._time = time

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse2003':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_3 of this InlineResponse2003.  # noqa: E501
        :rtype: InlineResponse2003
        """
        return util.deserialize_model(dikt, cls)

    @property
    def updates(self):
        """Gets the updates of this InlineResponse2003.

        the number of update message received  # noqa: E501

        :return: The updates of this InlineResponse2003.
        :rtype: float
        """
        return self._updates

    @updates.setter
    def updates(self, updates):
        """Sets the updates of this InlineResponse2003.

        the number of update message received  # noqa: E501

        :param updates: The updates of this InlineResponse2003.
        :type updates: float
        """

        self._updates = updates

    @property
    def availability(self):
        """Gets the availability of this InlineResponse2003.

        the percentage of time in which the controller is updated  # noqa: E501

        :return: The availability of this InlineResponse2003.
        :rtype: float
        """
        return self._availability

    @availability.setter
    def availability(self, availability):
        """Sets the availability of this InlineResponse2003.

        the percentage of time in which the controller is updated  # noqa: E501

        :param availability: The availability of this InlineResponse2003.
        :type availability: float
        """

        self._availability = availability

    @property
    def time(self):
        """Gets the time of this InlineResponse2003.

        the timestamp which refers the result. Each results define a 5m interval of results aggregation  # noqa: E501

        :return: The time of this InlineResponse2003.
        :rtype: str
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this InlineResponse2003.

        the timestamp which refers the result. Each results define a 5m interval of results aggregation  # noqa: E501

        :param time: The time of this InlineResponse2003.
        :type time: str
        """

        self._time = time
